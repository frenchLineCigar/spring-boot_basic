plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE' /* starter 생성 시 spring-boot version */
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11' /* java version */

repositories {
	mavenCentral() /* repo url */
}

/* Chp2 프로젝트 환경설정 > 라이브러리 살펴보기 : Gradle은 의존관계가 있는 라이브러리를 함께 다운로드 한다 */
/* External Libraries, Gradle(Tool Windows) 에서 땡겨온 라이브러리 확인 */
dependencies { /* libraries */
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' /* thymeleaf template engine(View) */
	implementation 'org.springframework.boot:spring-boot-starter-web' /* spring web project */
	testImplementation('org.springframework.boot:spring-boot-starter-test') { /* junit5 (default) */
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

/**
 * 스프링 부트 라이브러리
 * spring-boot-starter-web
 * 		spring-boot-starter-tomcat: 내장 톰캣 (웹서버)
 * 		spring-webmvc: 스프링 웹 MVC
 * spring-boot-starter-thymeleaf: 타임리프 템플릿 엔진(View)
 * spring-boot-starter(공통): 스프링 부트 + 스프링 코어 + 로깅
 * 		spring-boot
 * 			spring-core
 * 		spring-boot-starter-logging
 * 			logback, slf4j : 요즘 표준 로깅 조합
 */

/**
 * 테스트 라이브러리
 * spring-boot-starter-test
 * 		junit: 테스트 프레임워크, 5버전이 추세
 * 		mockito: 목 라이브러리
 * 		assertj: 테스트 코드를 좀 더 편하게 작성하게 도와주는 라이브러리
 * 		spring-test: 스프링 통합 테스트 지원
 */

test {
	useJUnitPlatform()
}
